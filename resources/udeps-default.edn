{:cfg/verbose    true

 :cfg/cache?     true
 :cfg/cache-path ".udeps-cache/"

 :cfg/export-path ".udeps/"

 ;;   Search and read a file at configured path,
 ;;   keyword's identifier is the filename:
 ;;     example: :local/foo.edn
 ;;              => .udeps/foo.edn

 :src/local  ".udeps/"

 ;;   Perform an HTTP get query that return a function's data map.
 ;;     example:
 ;;     :http/hello-world.edn
 ;;     => GET https://raw.githubu...nv/test/hello-world.edn

 :src/remote {:url "https://raw.githubusercontent.com/Joeyjoejoe/micro-deps/master/env/test/resources/"
              :headers  {"Accept" "*/*"}
              :timeout 1000
              :as      :auto
              ;; :basic-auth ["user" "pass"]
              ;; :query-params {:param "value" :param2 ["value1" "value2"]}
              ;; :user-agent "User-Agent-string"
              }

 ;; Below are utility sources, not designed to be used directly but
 ;; automatically when inject! is given string instead of namespaced keywords

 ;; Inject function based on an absolute path to a file
 ;;   example:
 ;;   (inject! "/home/victor/Projects/micro-deps/env/test/resources/hello-world.edn")

 :src/file   ""

 ;; Inject function given an url
 ;;   example:
 ;;   (udeps/inject! "https://raw.githubusercontent.com/Joeyjoejoe/my-deps/master/udeps/puts")

 :src/url    {:url ""
              :headers  {"Accept" "*/*"}
              :timeout 1000
              :as      :auto}
}
